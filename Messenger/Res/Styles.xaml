<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="Messenger.Res.CustomEvents">
    <!--TEXTBOX-->
    <Style x:Key="textBoxes" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="textBoxes2" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="comboboxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1a3b57"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#163148"/>
            </Trigger>
        </Style.Triggers>
    </Style>

        <!--ScrollBar-->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="thumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="BorderBrush" Value="blue"/>
    </Style>



    <!--TextBlockMessages-->
    <Style x:Key="cloudsForMessages" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Aquamarine"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="timeForClouds" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Aquamarine"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--TextBlockNames-->
    <Style x:Key="namesForMessages" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="Orange"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <!--LISTVIEWHeader-->
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    
    <!--LISTVIEWItems-->
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                        <GridViewRowPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_LeftMouseButtonDown"/>
        <EventSetter Event="PreviewMouseRightButtonDown" Handler="ListViewItem_RightMouseButtonDown"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <!--Stack-->
    <Style x:Key="stackStyle" x:Name="stack" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--CHATTEXTBOX-->
    <Style x:Key="chatTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="0" Background="Transparent">
                        <Grid>
                            <TextBox VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                                     HorizontalAlignment="Stretch"
                                     x:Name="MessageBox"
                                     Background="Transparent"
                                     TextWrapping="Wrap"
                                     BorderThickness="0"
                                     Foreground="LightGray"
                                     Text="{Binding MessageText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding SendCommand}" Key="Return"/>
                                </TextBox.InputBindings>

                            </TextBox>

                            <Label IsHitTestVisible="False"
                                   Content="{DynamicResource WriteAMessage}"
                                   VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Foreground="DarkGray">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=MessageBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--PASSWORDBOX-->
    <Style x:Key="passwordBoxes" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--BORDER-->

    <!--BUTTON2-->
    <Style x:Key="buttons2" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#445a6c"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10,10,10,10"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderThickness="2"
                            BorderBrush="#163148"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="white"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--BUTTON-->
    <Style x:Key="buttons" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10,10,0,0"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderThickness="2"
                            BorderBrush="#163148"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CHATBUTTONS-->
    <!--#445a6c-->
    <Style x:Key="chatButtons" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderThickness="0"
                            BorderBrush="Transparent"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="white"/>
                        </Trigger>
                        

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--SettingsButton-->
    <Style x:Key="SettingsButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0"
                        TextBlock.Foreground="{TemplateBinding Foreground}"
                        BorderThickness="0"
                        BorderBrush="Transparent"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#224c70"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LABEL-->
    <Style x:Key="labels" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>
    
    <!--Blocks-->
    <Style x:Key="blocks" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style x:Key="chatGrid" x:Name="unrMessGrid" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=unrMess, Path=Text}" Value="0">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="blocks2" x:Name="unrMess" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>


    <!--chats-->

</ResourceDictionary>